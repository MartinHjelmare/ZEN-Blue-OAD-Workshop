<?xml version="1.0" encoding="utf-8"?>
<Script Version="1.0">
  <Language>Python</Language>
  <Text>"""
File: Run_Experiment_Analyze_Image_Plot_Pandas.czmac
Author: Sebastian Rhode
Date: 2017_06_10
Verison: 1.3
"""

from System.Diagnostics import Process
from System.IO import File, Path, Directory

# clear output
Zen.Application.Documents.RemoveAll(False)
Zen.Application.MacroEditor.ClearMessages()
# define output folder
outputpath = r'c:\Output'

# initialize Zen experiment and run it
experiment_filename = r'ML_96_Wellplate_Castor.czexp'
exp = ZenExperiment()
exp.Load(experiment_filename)
image2analyze = Zen.Acquisition.Execute(exp)
# save the image
savename = Path.GetFileNameWithoutExtension(experiment_filename) + '.czi'
image2analyze.Save(Path.Combine(outputpath, savename))

# define the image analysis setting and run the image analysis on the active image
iafilename = r'c:\Users\M1SRH\Documents\Carl Zeiss\ZEN\Documents\Image Analysis Settings\Count_Cells_DAPI_96well.czias'
ias = ZenImageAnalysisSetting()
ias.Load(iafilename)
Zen.Analyzing.Analyze(image2analyze,ias)

# Create data list with results for all regions (e.g. all nuclei)
table_all = Zen.Analyzing.CreateRegionsTable(image2analyze)
Zen.Application.Documents.Add(table_all)
# Create data list with results for each region (e.g. every single nucleus)
table_single = Zen.Analyzing.CreateRegionTable(image2analyze)
Zen.Application.Documents.Add(table_single)

# Save both data lists as CSV files
table_all_filename = Path.Combine(outputpath, image2analyze.Name[:-4] + '_All.csv')
table_all.Save(table_all_filename)
table_single_filename = Path.Combine(outputpath, image2analyze.Name[:-4] + '_Single.csv')
table_single.Save(table_single_filename)

# close the image and image analysis setting
#image2analyze.Close()
ias.Close()

# define the external plot script or tool
pythonexe =  r'c:\Anaconda3\python.exe'
#pythonexe =  r'c:\Anaconda3\envs\py27\python.exe'
script = r'c:\Users\M1SRH\Documents\Projects\OAD\External_Python_Scripts_for_OAD\test_wellplate_from_ZEN_py3.py'

# define the actual CSV file and the parameters
csvfile = Path.Combine(outputpath, table_single_filename)
# this depends on the actual CZIAS and the import of the CSV table in python
parameter2display = 'ObjectNumber'
params = ' -f ' + csvfile + ' -w 96' + ' -p ' + parameter2display + ' -sp False'

# start the data display script as an external application
app = Process();
app.StartInfo.FileName = pythonexe
app.StartInfo.Arguments = script + params
app.Start()
app.WaitForExit()

savename_all =  Path.Combine(outputpath, Path.GetFileNameWithoutExtension(savename) + '_Single_HM_all.png')
savename_single = Path.Combine(outputpath, Path.GetFileNameWithoutExtension(savename) + '_Single_HM_' + parameter2display + '.png')

print 'Showing saved figure in ZEN.'

if File.Exists(savename_all):
    plotfigure1 = Zen.Application.LoadImage(savename_all, False)
    plotfigure2 = Zen.Application.LoadImage(savename_single, False)
    Zen.Application.Documents.Add(plotfigure1)
    Zen.Application.Documents.Add(plotfigure2)
else:
    print 'Saved figure not found.'

print 'Done.'
</Text>
  <Author></Author>
  <Description></Description>
  <ApplicationName></ApplicationName>
  <Keywords></Keywords>
  <Row>68</Row>
  <Column>42</Column>
</Script>